@using codetheory.Web.Models
@inject IHttpClientFactory ClientFactory

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">CodeTheory</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/users" Match="NavLinkMatch.All">
                Users
            </NavLink>
        </div>

        @if (lessons == null)
        {
            <div class="px-3 text-muted">Loading lessons...</div>
        }
        else
        {
            @foreach (var lesson in lessons.OrderBy(l => l.LessonOrder))
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@($"/lesson/{lesson.Id}")" Match="NavLinkMatch.All">
                        @lesson.Title
                    </NavLink>
                </div>                
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@($"/lesson/{lesson.Id}/quiz")" Match="NavLinkMatch.All">
                        Quiz @lesson.LessonOrder
                    </NavLink>
                </div>
            }
        }
    </nav>
</div>

@code {
    private List<LessonNavbarDto>? lessons;

    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient("Api");
        lessons = await client.GetFromJsonAsync<List<LessonNavbarDto>>("api/Lesson");
    }
}
